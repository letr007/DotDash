name: Release

on:
  push:
    tags:
      - "v*"  # 当推送标签以 "v" 开头时触发（例如 v1.0.0）

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Add target
        run: rustup target add ${{ matrix.target }}

      - name: Build project
        run: cargo build --release --target ${{ matrix.target }}

      - name: Install cargo-deb (Ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: cargo install cargo-deb

      - name: Generate .deb package (Ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: cargo deb --target ${{ matrix.target }} --no-build

      - name: Upload .deb and .exe artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-binaries
          path: |
            target/${{ matrix.target }}/release/dotdash.exe
            target/${{ matrix.target }}/debian/*.deb

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get version
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}  # 获取标签中的版本号
          echo "Version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Download .deb and .exe artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.KEY }}
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          body: "自动化发布版本 v${{ steps.get_version.outputs.version }}"
          files: |
            artifacts/release-binaries/*.deb  # 仅上传 .deb 文件
            artifacts/release-binaries/dotdash.exe  # 仅上传 .exe 文件
